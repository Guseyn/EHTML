let tokens={CONST:0,UNARY:1,BINARY:2,INFIX:3,LEFTBRACKET:4,RIGHTBRACKET:5,SPACE:6,UNDEROVER:7,DEFINITION:8,LEFTRIGHT:9,TEXT:10},quoteSymbol={input:"'",tag:"mtext",output:"mbox",tex:null,tType:tokens.TEXT},symbols=[{input:"alpha",tag:"mi",output:"α",tex:null,tType:tokens.CONST},{input:"beta",tag:"mi",output:"β",tex:null,tType:tokens.CONST},{input:"chi",tag:"mi",output:"χ",tex:null,tType:tokens.CONST},{input:"delta",tag:"mi",output:"δ",tex:null,tType:tokens.CONST},{input:"Delta",tag:"mo",output:"Δ",tex:null,tType:tokens.CONST},{input:"epsi",tag:"mi",output:"ε",tex:"epsilon",tType:tokens.CONST},{input:"varepsilon",tag:"mi",output:"ɛ",tex:null,tType:tokens.CONST},{input:"eta",tag:"mi",output:"η",tex:null,tType:tokens.CONST},{input:"gamma",tag:"mi",output:"γ",tex:null,tType:tokens.CONST},{input:"Gamma",tag:"mo",output:"Γ",tex:null,tType:tokens.CONST},{input:"iota",tag:"mi",output:"ι",tex:null,tType:tokens.CONST},{input:"kappa",tag:"mi",output:"κ",tex:null,tType:tokens.CONST},{input:"lambda",tag:"mi",output:"λ",tex:null,tType:tokens.CONST},{input:"Lambda",tag:"mo",output:"Λ",tex:null,tType:tokens.CONST},{input:"lamda",tag:"mi",output:"lambda",tex:null,tType:tokens.DEFINITION},{input:"Lamda",tag:"mi",output:"Lambda",tex:null,tType:tokens.DEFINITION},{input:"mu",tag:"mi",output:"μ",tex:null,tType:tokens.CONST},{input:"nu",tag:"mi",output:"ν",tex:null,tType:tokens.CONST},{input:"omega",tag:"mi",output:"ω",tex:null,tType:tokens.CONST},{input:"Omega",tag:"mo",output:"Ω",tex:null,tType:tokens.CONST},{input:"phi",tag:"mi",output:"φ",tex:null,tType:tokens.CONST},{input:"varphi",tag:"mi",output:"ϕ",tex:null,tType:tokens.CONST},{input:"Phi",tag:"mo",output:"Φ",tex:null,tType:tokens.CONST},{input:"pi",tag:"mi",output:"π",tex:null,tType:tokens.CONST},{input:"Pi",tag:"mo",output:"Π",tex:null,tType:tokens.CONST},{input:"psi",tag:"mi",output:"ψ",tex:null,tType:tokens.CONST},{input:"Psi",tag:"mi",output:"Ψ",tex:null,tType:tokens.CONST},{input:"rho",tag:"mi",output:"ρ",tex:null,tType:tokens.CONST},{input:"sigma",tag:"mi",output:"σ",tex:null,tType:tokens.CONST},{input:"Sigma",tag:"mo",output:"Σ",tex:null,tType:tokens.CONST},{input:"tau",tag:"mi",output:"τ",tex:null,tType:tokens.CONST},{input:"theta",tag:"mi",output:"θ",tex:null,tType:tokens.CONST},{input:"vartheta",tag:"mi",output:"ϑ",tex:null,tType:tokens.CONST},{input:"Theta",tag:"mo",output:"Θ",tex:null,tType:tokens.CONST},{input:"upsilon",tag:"mi",output:"υ",tex:null,tType:tokens.CONST},{input:"xi",tag:"mi",output:"ξ",tex:null,tType:tokens.CONST},{input:"Xi",tag:"mo",output:"Ξ",tex:null,tType:tokens.CONST},{input:"zeta",tag:"mi",output:"ζ",tex:null,tType:tokens.CONST},{input:"*",tag:"mo",output:"⋅",tex:"cdot",tType:tokens.CONST},{input:"**",tag:"mo",output:"∗",tex:"ast",tType:tokens.CONST},{input:"***",tag:"mo",output:"⋆",tex:"star",tType:tokens.CONST},{input:"// ",tag:"mo",output:"/",tex:"/",tType:tokens.CONST,val:!0,noTexCopy:!0},{input:"\\\\",tag:"mo",output:"\\",tex:"backslash",tType:tokens.CONST},{input:"setminus",tag:"mo",output:"\\",tex:null,tType:tokens.CONST},{input:"xx",tag:"mo",output:"\xd7",tex:"times",tType:tokens.CONST},{input:"|><",tag:"mo",output:"⋉",tex:"ltimes",tType:tokens.CONST},{input:"><|",tag:"mo",output:"⋊",tex:"rtimes",tType:tokens.CONST},{input:"|><|",tag:"mo",output:"⋈",tex:"bowtie",tType:tokens.CONST},{input:"-:",tag:"mo",output:"\xf7",tex:"div",tType:tokens.CONST},{input:"divide",tag:"mo",output:"-:",tex:null,tType:tokens.DEFINITION},{input:"@",tag:"mo",output:"∘",tex:"circ",tType:tokens.CONST},{input:"o+",tag:"mo",output:"⊕",tex:"oplus",tType:tokens.CONST},{input:"ox",tag:"mo",output:"⊗",tex:"otimes",tType:tokens.CONST},{input:"o.",tag:"mo",output:"⊙",tex:"odot",tType:tokens.CONST},{input:"sum",tag:"mo",output:"∑",tex:null,tType:tokens.UNDEROVER},{input:"prod",tag:"mo",output:"∏",tex:null,tType:tokens.UNDEROVER},{input:"^^",tag:"mo",output:"∧",tex:"wedge",tType:tokens.CONST},{input:"^^^",tag:"mo",output:"⋀",tex:"bigwedge",tType:tokens.UNDEROVER},{input:"vv",tag:"mo",output:"∨",tex:"vee",tType:tokens.CONST},{input:"vvv",tag:"mo",output:"⋁",tex:"bigvee",tType:tokens.UNDEROVER},{input:"nn",tag:"mo",output:"∩",tex:"cap",tType:tokens.CONST},{input:"nnn",tag:"mo",output:"⋂",tex:"bigcap",tType:tokens.UNDEROVER},{input:"uu",tag:"mo",output:"∪",tex:"cup",tType:tokens.CONST},{input:"uuu",tag:"mo",output:"⋃",tex:"bigcup",tType:tokens.UNDEROVER},{input:"overset",tag:"mover",output:"stackrel",tex:null,tType:tokens.BINARY},{input:"underset",tag:"munder",output:"stackrel",tex:null,tType:tokens.BINARY},{input:"!=",tag:"mo",output:"≠",tex:"ne",tType:tokens.CONST},{input:":=",tag:"mo",output:":=",tex:null,tType:tokens.CONST},{input:"lt",tag:"mo",output:"<",tex:null,tType:tokens.CONST},{input:"gt",tag:"mo",output:">",tex:null,tType:tokens.CONST},{input:"<=",tag:"mo",output:"≤",tex:"le",tType:tokens.CONST},{input:"lt=",tag:"mo",output:"≤",tex:"leq",tType:tokens.CONST},{input:"gt=",tag:"mo",output:"≥",tex:"geq",tType:tokens.CONST},{input:">=",tag:"mo",output:"≥",tex:"ge",tType:tokens.CONST},{input:"-<",tag:"mo",output:"≺",tex:"prec",tType:tokens.CONST},{input:"-lt",tag:"mo",output:"≺",tex:null,tType:tokens.CONST},{input:">-",tag:"mo",output:"≻",tex:"succ",tType:tokens.CONST},{input:"-<=",tag:"mo",output:"⪯",tex:"preceq",tType:tokens.CONST},{input:">-=",tag:"mo",output:"⪰",tex:"succeq",tType:tokens.CONST},{input:"in",tag:"mo",output:"∈",tex:null,tType:tokens.CONST},{input:"!in",tag:"mo",output:"∉",tex:"notin",tType:tokens.CONST},{input:"sub",tag:"mo",output:"⊂",tex:"subset",tType:tokens.CONST},{input:"sup",tag:"mo",output:"⊃",tex:"supset",tType:tokens.CONST},{input:"sube",tag:"mo",output:"⊆",tex:"subseteq",tType:tokens.CONST},{input:"supe",tag:"mo",output:"⊇",tex:"supseteq",tType:tokens.CONST},{input:"-=",tag:"mo",output:"≡",tex:"equiv",tType:tokens.CONST},{input:"~=",tag:"mo",output:"≅",tex:"stackrel{\\sim}{=}",tType:tokens.CONST},{input:"cong",tag:"mo",output:"~=",tex:null,tType:tokens.DEFINITION},{input:"~~",tag:"mo",output:"≈",tex:"approx",tType:tokens.CONST},{input:"prop",tag:"mo",output:"∝",tex:"propto",tType:tokens.CONST},{input:"and",tag:"mtext",output:"and",tex:null,tType:tokens.SPACE},{input:"or",tag:"mtext",output:"or",tex:null,tType:tokens.SPACE},{input:"not",tag:"mo",output:"\xac",tex:"neg",tType:tokens.CONST},{input:"=>",tag:"mo",output:"⇒",tex:"Rightarrow",tType:tokens.CONST},{input:"implies",tag:"mo",output:"=>",tex:null,tType:tokens.DEFINITION},{input:"if",tag:"mo",output:"if",tex:null,tType:tokens.SPACE},{input:"<=>",tag:"mo",output:"⇔",tex:"Leftrightarrow",tType:tokens.CONST},{input:"iff",tag:"mo",output:"<=>",tex:null,tType:tokens.DEFINITION},{input:"AA",tag:"mo",output:"∀",tex:"forall",tType:tokens.CONST},{input:"EE",tag:"mo",output:"∃",tex:"exists",tType:tokens.CONST},{input:"_|_",tag:"mo",output:"⊥",tex:"bot",tType:tokens.CONST},{input:"TT",tag:"mo",output:"⊤",tex:"top",tType:tokens.CONST},{input:"|--",tag:"mo",output:"⊢",tex:"vdash",tType:tokens.CONST},{input:"|==",tag:"mo",output:"⊨",tex:"models",tType:tokens.CONST},{input:"(",tag:"mo",output:"(",tex:null,tType:tokens.LEFTBRACKET,val:!0},{input:")",tag:"mo",output:")",tex:null,tType:tokens.RIGHTBRACKET,val:!0},{input:"[",tag:"mo",output:"[",tex:null,tType:tokens.LEFTBRACKET,val:!0},{input:"]",tag:"mo",output:"]",tex:null,tType:tokens.RIGHTBRACKET,val:!0},{input:"{",tag:"mo",output:"{",tex:"lbrace",tType:tokens.LEFTBRACKET},{input:"}",tag:"mo",output:"}",tex:"rbrace",tType:tokens.RIGHTBRACKET},{input:"|",tag:"mo",output:"|",tex:null,tType:tokens.LEFTRIGHT,val:!0},{input:"(:",tag:"mo",output:"〈",tex:"langle",tType:tokens.LEFTBRACKET},{input:":)",tag:"mo",output:"〉",tex:"rangle",tType:tokens.RIGHTBRACKET},{input:"<<",tag:"mo",output:"〈",tex:"langle",tType:tokens.LEFTBRACKET},{input:">>",tag:"mo",output:"〉",tex:"rangle",tType:tokens.RIGHTBRACKET},{input:"{:",tag:"mo",output:"{:",tex:null,tType:tokens.LEFTBRACKET,invisible:!0},{input:":}",tag:"mo",output:":}",tex:null,tType:tokens.RIGHTBRACKET,invisible:!0},{input:"int",tag:"mo",output:"∫",tex:null,tType:tokens.CONST},{input:"dx",tag:"mi",output:"{:d x:}",tex:null,tType:tokens.DEFINITION},{input:"dy",tag:"mi",output:"{:d y:}",tex:null,tType:tokens.DEFINITION},{input:"dz",tag:"mi",output:"{:d z:}",tex:null,tType:tokens.DEFINITION},{input:"dt",tag:"mi",output:"{:d t:}",tex:null,tType:tokens.DEFINITION},{input:"oint",tag:"mo",output:"∮",tex:null,tType:tokens.CONST},{input:"del",tag:"mo",output:"∂",tex:"partial",tType:tokens.CONST},{input:"grad",tag:"mo",output:"∇",tex:"nabla",tType:tokens.CONST},{input:"+-",tag:"mo",output:"\xb1",tex:"pm",tType:tokens.CONST},{input:"O/",tag:"mo",output:"∅",tex:"emptyset",tType:tokens.CONST},{input:"oo",tag:"mo",output:"∞",tex:"infty",tType:tokens.CONST},{input:"aleph",tag:"mo",output:"ℵ",tex:null,tType:tokens.CONST},{input:"...",tag:"mo",output:"...",tex:"ldots",tType:tokens.CONST},{input:":.",tag:"mo",output:"∴",tex:"therefore",tType:tokens.CONST},{input:":'",tag:"mo",output:"∵",tex:"because",tType:tokens.CONST},{input:"/_",tag:"mo",output:"∠",tex:"angle",tType:tokens.CONST},{input:"/_\\",tag:"mo",output:"△",tex:"triangle",tType:tokens.CONST},{input:"\\ ",tag:"mo",output:"\xa0",tex:null,tType:tokens.CONST,val:!0},{input:"frown",tag:"mo",output:"⌢",tex:null,tType:tokens.CONST},{input:"%",tag:"mo",output:"%",tex:"%",tType:tokens.CONST,noTexCopy:!0},{input:"quad",tag:"mo",output:"\xa0\xa0",tex:null,tType:tokens.CONST},{input:"qquad",tag:"mo",output:"\xa0\xa0\xa0\xa0",tex:null,tType:tokens.CONST},{input:"cdots",tag:"mo",output:"⋯",tex:null,tType:tokens.CONST},{input:"vdots",tag:"mo",output:"⋮",tex:null,tType:tokens.CONST},{input:"ddots",tag:"mo",output:"⋱",tex:null,tType:tokens.CONST},{input:"diamond",tag:"mo",output:"⋄",tex:null,tType:tokens.CONST},{input:"square",tag:"mo",output:"□",tex:"boxempty",tType:tokens.CONST},{input:"|__",tag:"mo",output:"⌊",tex:"lfloor",tType:tokens.CONST},{input:"__|",tag:"mo",output:"⌋",tex:"rfloor",tType:tokens.CONST},{input:"|~",tag:"mo",output:"⌈",tex:"lceil",tType:tokens.CONST},{input:"lceiling",tag:"mo",output:"|~",tex:null,tType:tokens.DEFINITION},{input:"~|",tag:"mo",output:"⌉",tex:"rceil",tType:tokens.CONST},{input:"rceiling",tag:"mo",output:"~|",tex:null,tType:tokens.DEFINITION},{input:"CC",tag:"mo",output:"ℂ",tex:"mathbb{C}",tType:tokens.CONST,noTexCopy:!0},{input:"NN",tag:"mo",output:"ℕ",tex:"mathbb{N}",tType:tokens.CONST,noTexCopy:!0},{input:"QQ",tag:"mo",output:"ℚ",tex:"mathbb{Q}",tType:tokens.CONST,noTexCopy:!0},{input:"RR",tag:"mo",output:"ℝ",tex:"mathbb{R}",tType:tokens.CONST,noTexCopy:!0},{input:"ZZ",tag:"mo",output:"ℤ",tex:"mathbb{Z}",tType:tokens.CONST,noTexCopy:!0},{input:"f",tag:"mi",output:"f",tex:null,tType:tokens.UNARY,func:!0,val:!0},{input:"g",tag:"mi",output:"g",tex:null,tType:tokens.UNARY,func:!0,val:!0},{input:"''",tag:"mo",output:"''",tex:null,val:!0},{input:"'''",tag:"mo",output:"'''",tex:null,val:!0},{input:"''''",tag:"mo",output:"''''",tex:null,val:!0},{input:"lim",tag:"mo",output:"lim",tex:null,tType:tokens.UNDEROVER},{input:"Lim",tag:"mo",output:"Lim",tex:null,tType:tokens.UNDEROVER},{input:"sin",tag:"mo",output:"sin",tex:null,tType:tokens.UNARY,func:!0},{input:"cos",tag:"mo",output:"cos",tex:null,tType:tokens.UNARY,func:!0},{input:"tan",tag:"mo",output:"tan",tex:null,tType:tokens.UNARY,func:!0},{input:"arcsin",tag:"mo",output:"arcsin",tex:null,tType:tokens.UNARY,func:!0},{input:"arccos",tag:"mo",output:"arccos",tex:null,tType:tokens.UNARY,func:!0},{input:"arctan",tag:"mo",output:"arctan",tex:null,tType:tokens.UNARY,func:!0},{input:"sinh",tag:"mo",output:"sinh",tex:null,tType:tokens.UNARY,func:!0},{input:"cosh",tag:"mo",output:"cosh",tex:null,tType:tokens.UNARY,func:!0},{input:"tanh",tag:"mo",output:"tanh",tex:null,tType:tokens.UNARY,func:!0},{input:"cot",tag:"mo",output:"cot",tex:null,tType:tokens.UNARY,func:!0},{input:"coth",tag:"mo",output:"coth",tex:null,tType:tokens.UNARY,func:!0},{input:"sech",tag:"mo",output:"sech",tex:null,tType:tokens.UNARY,func:!0},{input:"csch",tag:"mo",output:"csch",tex:null,tType:tokens.UNARY,func:!0},{input:"sec",tag:"mo",output:"sec",tex:null,tType:tokens.UNARY,func:!0},{input:"csc",tag:"mo",output:"csc",tex:null,tType:tokens.UNARY,func:!0},{input:"log",tag:"mo",output:"log",tex:null,tType:tokens.UNARY,func:!0},{input:"ln",tag:"mo",output:"ln",tex:null,tType:tokens.UNARY,func:!0},{input:"abs",tag:"mo",output:"abs",tex:null,tType:tokens.UNARY,noTexCopy:!0,rewriteLeftRight:["|","|"]},{input:"norm",tag:"mo",output:"norm",tex:null,tType:tokens.UNARY,noTexCopy:!0,rewriteLeftRight:["\\|","\\|"]},{input:"floor",tag:"mo",output:"floor",tex:null,tType:tokens.UNARY,noTexCopy:!0,rewriteLeftRight:["\\lfloor","\\rfloor"]},{input:"ceil",tag:"mo",output:"ceil",tex:null,tType:tokens.UNARY,noTexCopy:!0,rewriteLeftRight:["\\lceil","\\rceil"]},{input:"Sin",tag:"mo",output:"sin",tex:null,tType:tokens.UNARY,func:!0},{input:"Cos",tag:"mo",output:"cos",tex:null,tType:tokens.UNARY,func:!0},{input:"Tan",tag:"mo",output:"tan",tex:null,tType:tokens.UNARY,func:!0},{input:"Arcsin",tag:"mo",output:"arcsin",tex:null,tType:tokens.UNARY,func:!0},{input:"Arccos",tag:"mo",output:"arccos",tex:null,tType:tokens.UNARY,func:!0},{input:"Arctan",tag:"mo",output:"arctan",tex:null,tType:tokens.UNARY,func:!0},{input:"Sinh",tag:"mo",output:"sinh",tex:null,tType:tokens.UNARY,func:!0},{input:"Sosh",tag:"mo",output:"cosh",tex:null,tType:tokens.UNARY,func:!0},{input:"Tanh",tag:"mo",output:"tanh",tex:null,tType:tokens.UNARY,func:!0},{input:"Cot",tag:"mo",output:"cot",tex:null,tType:tokens.UNARY,func:!0},{input:"Sec",tag:"mo",output:"sec",tex:null,tType:tokens.UNARY,func:!0},{input:"Csc",tag:"mo",output:"csc",tex:null,tType:tokens.UNARY,func:!0},{input:"Log",tag:"mo",output:"log",tex:null,tType:tokens.UNARY,func:!0},{input:"Ln",tag:"mo",output:"ln",tex:null,tType:tokens.UNARY,func:!0},{input:"Abs",tag:"mo",output:"abs",tex:null,tType:tokens.UNARY,noTexCopy:!0,rewriteLeftRight:["|","|"]},{input:"det",tag:"mo",output:"det",tex:null,tType:tokens.UNARY,func:!0},{input:"exp",tag:"mo",output:"exp",tex:null,tType:tokens.UNARY,func:!0},{input:"dim",tag:"mo",output:"dim",tex:null,tType:tokens.CONST},{input:"mod",tag:"mo",output:"mod",tex:"text{mod}",tType:tokens.CONST,noTexCopy:!0},{input:"gcd",tag:"mo",output:"gcd",tex:null,tType:tokens.UNARY,func:!0},{input:"lcm",tag:"mo",output:"lcm",tex:"text{lcm}",tType:tokens.UNARY,func:!0,noTexCopy:!0},{input:"lub",tag:"mo",output:"lub",tex:null,tType:tokens.CONST},{input:"glb",tag:"mo",output:"glb",tex:null,tType:tokens.CONST},{input:"min",tag:"mo",output:"min",tex:null,tType:tokens.UNDEROVER},{input:"max",tag:"mo",output:"max",tex:null,tType:tokens.UNDEROVER},{input:"uarr",tag:"mo",output:"↑",tex:"uparrow",tType:tokens.CONST},{input:"darr",tag:"mo",output:"↓",tex:"downarrow",tType:tokens.CONST},{input:"rarr",tag:"mo",output:"→",tex:"rightarrow",tType:tokens.CONST},{input:"->",tag:"mo",output:"→",tex:"to",tType:tokens.CONST},{input:">->",tag:"mo",output:"↣",tex:"rightarrowtail",tType:tokens.CONST},{input:"->>",tag:"mo",output:"↠",tex:"twoheadrightarrow",tType:tokens.CONST},{input:">->>",tag:"mo",output:"⤖",tex:"twoheadrightarrowtail",tType:tokens.CONST},{input:"|->",tag:"mo",output:"↦",tex:"mapsto",tType:tokens.CONST},{input:"larr",tag:"mo",output:"←",tex:"leftarrow",tType:tokens.CONST},{input:"harr",tag:"mo",output:"↔",tex:"leftrightarrow",tType:tokens.CONST},{input:"rArr",tag:"mo",output:"⇒",tex:"Rightarrow",tType:tokens.CONST},{input:"lArr",tag:"mo",output:"⇐",tex:"Leftarrow",tType:tokens.CONST},{input:"hArr",tag:"mo",output:"⇔",tex:"Leftrightarrow",tType:tokens.CONST},{input:"sqrt",tag:"msqrt",output:"sqrt",tex:null,tType:tokens.UNARY},{input:"root",tag:"mroot",output:"root",tex:null,tType:tokens.BINARY},{input:"frac",tag:"mfrac",output:"/",tex:null,tType:tokens.BINARY},{input:"/",tag:"mfrac",output:"/",tex:null,tType:tokens.INFIX},{input:"stackrel",tag:"mover",output:"stackrel",tex:null,tType:tokens.BINARY},{input:"_",tag:"msub",output:"_",tex:null,tType:tokens.INFIX},{input:"^",tag:"msup",output:"^",tex:null,tType:tokens.INFIX},{input:"cancel",tag:"menclose",output:"cancel",tex:null,tType:tokens.UNARY},{input:"Sqrt",tag:"msqrt",output:"sqrt",tex:null,tType:tokens.UNARY},{input:"hat",tag:"mover",output:"^",tex:null,tType:tokens.UNARY,acc:!0},{input:"bar",tag:"mover",output:"\xaf",tex:"overline",tType:tokens.UNARY,acc:!0},{input:"vec",tag:"mover",output:"→",tex:null,tType:tokens.UNARY,acc:!0},{input:"tilde",tag:"mover",output:"~",tex:null,tType:tokens.UNARY,acc:!0},{input:"dot",tag:"mover",output:".",tex:null,tType:tokens.UNARY,acc:!0},{input:"ddot",tag:"mover",output:"..",tex:null,tType:tokens.UNARY,acc:!0},{input:"ul",tag:"munder",output:"̲",tex:"underline",tType:tokens.UNARY,acc:!0},{input:"ubrace",tag:"munder",output:"⏟",tex:"underbrace",tType:tokens.UNARY,acc:!0},{input:"obrace",tag:"mover",output:"⏞",tex:"overbrace",tType:tokens.UNARY,acc:!0},{input:"text",tag:"mtext",output:"text",tex:null,tType:tokens.TEXT},{input:"mbox",tag:"mtext",output:"mbox",tex:null,tType:tokens.TEXT},quoteSymbol,{input:"color",tag:"mstyle",tType:tokens.BINARY},{input:"bb",tag:"mstyle",atName:"mathvariant",atVal:"bold",output:"bb",tex:"mathbf",tType:tokens.UNARY,noTexCopy:!0},{input:"mathbf",tag:"mstyle",atName:"mathvariant",atVal:"bold",output:"mathbf",tex:null,tType:tokens.UNARY},{input:"sf",tag:"mstyle",atName:"mathvariant",atVal:"sans-serif",output:"sf",tex:"mathsf",tType:tokens.UNARY,noTexCopy:!0},{input:"mathsf",tag:"mstyle",atName:"mathvariant",atVal:"sans-serif",output:"mathsf",tex:null,tType:tokens.UNARY},{input:"bbb",tag:"mstyle",atName:"mathvariant",atVal:"double-struck",output:"bbb",tex:"mathbb",tType:tokens.UNARY,noTexCopy:!0},{input:"mathbb",tag:"mstyle",atName:"mathvariant",atVal:"double-struck",output:"mathbb",tex:null,tType:tokens.UNARY},{input:"cc",tag:"mstyle",atName:"mathvariant",atVal:"script",output:"cc",tex:"mathcal",tType:tokens.UNARY,noTexCopy:!0},{input:"mathcal",tag:"mstyle",atName:"mathvariant",atVal:"script",output:"mathcal",tex:null,tType:tokens.UNARY},{input:"tt",tag:"mstyle",atName:"mathvariant",atVal:"monospace",output:"tt",tex:"mathtt",tType:tokens.UNARY,noTexCopy:!0},{input:"mathtt",tag:"mstyle",atName:"mathvariant",atVal:"monospace",output:"mathtt",tex:null,tType:tokens.UNARY},{input:"fr",tag:"mstyle",atName:"mathvariant",atVal:"fraktur",output:"fr",tex:"mathfrak",tType:tokens.UNARY,noTexCopy:!0},{input:"mathfrak",tag:"mstyle",atName:"mathvariant",atVal:"fraktur",output:"mathfrak",tex:null,tType:tokens.UNARY},],inputSymbols=[];{let t=symbols.filter(t=>t.tex&&!0!==t.noTexCopy).map(t=>({input:t.tex,tag:t.tag,output:t.output,tType:t.tType,acc:t.acc||!1}));symbols.push(...t),symbols.sort((t,e)=>t.input>e.input?1:-1),inputSymbols=symbols.map(t=>t.input)}function removeCharsAndBlanks(t,e){let u;u="\\"===t.charAt(e)&&"\\"!==t.charAt(e+1)&&" "!==t.charAt(e+1)?t.slice(e+1):t.slice(e);let n=0;for(;n<u.length&&32>=u.charCodeAt(n);)n++;return u.slice(n)}function position(t,e,u){if(0===u){let n=t.length;for(u=-1;u+1<n;){let o=u+n>>1;t[o]<e?u=o:n=o}return n}let p=u;for(;p<t.length&&t[p]<e;)p++;return p}function getSymbol(t){let e,u,n=0,o=0,p,a,l,s="",i=!0;for(let T=1;T<=t.length&&i;T++)(n=position(inputSymbols,a=t.slice(0,T),o=n))<inputSymbols.length&&t.slice(0,inputSymbols[n].length)===inputSymbols[n]&&(s=inputSymbols[n],p=n,T=s.length),i=n<inputSymbols.length&&t.slice(0,inputSymbols[n].length)>=inputSymbols[n];if(e=u,""!==s)return u=symbols[p].tType,symbols[p];u=tokens.CONST,n=1,a=t.slice(0,1);let m=!0;for(;"0"<=a&&a<="9"&&n<=t.length;)a=t.slice(n,n+1),n++;if("."===a&&"0"<=(a=t.slice(n,n+1))&&a<="9")for(m=!1,n++;"0"<=a&&a<="9"&&n<=t.length;)a=t.slice(n,n+1),n++;return(m&&n>1||n>2?(a=t.slice(0,n-1),l="mn"):(n=2,l=("A">(a=t.slice(0,1))||a>"Z")&&("a">a||a>"z")?"mo":"mi"),"-"===a&&e===tokens.INFIX)?(u=tokens.INFIX,{input:a,tag:l,output:a,tType:tokens.UNARY,func:!0,val:!0}):{input:a,tag:l,output:a,tType:tokens.CONST,val:!0}}function removeBrackets(t){if("{"===t.charAt(0)&&"}"===t.charAt(t.length-1)){let e=0,u=t.substr(1,5);"\\left"===u?"("===(u=t.charAt(6))||"["===u||"{"===u?e=7:"\\lbrace"===(u=t.substr(6,7))&&(e=13):("("===(u=t.charAt(1))||"["===u)&&(e=2),e>0&&("\\right)}"===(u=t.substr(t.length-8))||"\\right]}"===u||"\\right.}"===u?t=(t="{"+t.substr(e)).substr(0,t.length-8)+"}":"\\rbrace}"===u&&(t=(t="{"+t.substr(e)).substr(0,t.length-14)+"}"))}return t}function getTeXsymbol(t){let e="";return(e="boolean"==typeof t.val&&t.val?"":"\\",t.tex)?e+t.tex:e+t.input}function parseSexpr(t,e){t=removeCharsAndBlanks(t,0);let u=getSymbol(t);if(!u||u.tType===tokens.RIGHTBRACKET&&e>0)return[null,t];switch(u.tType===tokens.DEFINITION&&(t=u.output+removeCharsAndBlanks(t,u.input.length),u=getSymbol(t)),u.tType){case tokens.UNDEROVER:case tokens.CONST:t=removeCharsAndBlanks(t,u.input.length);var n=getTeXsymbol(u);if("\\"===n.charAt(0)||"mo"===u.tag)return[n,t];return[`{${n}}`,t];case tokens.LEFTBRACKET:{e++,t=removeCharsAndBlanks(t,u.input.length);let o=parseExpr(t,!0,e);e--;var p=0;"\\right"===o[0].substr(0,6)&&(")"===(x=o[0].charAt(6))||"]"===x||"}"===x?p=6:"."===x?p=7:"\\rbrace"===(x=o[0].substr(6,7))&&(p=13));let a="";return p>0?(o[0]=o[0].substr(p),a=u.invisible?`{${o[0]}}`:`{${getTeXsymbol(u)}${o[0]}}`):a=u.invisible?`{\\left.${o[0]}}`:`{\\left${getTeXsymbol(u)}${o[0]}}`,[a,o[1]]}case tokens.TEXT:{u!==quoteSymbol&&(t=removeCharsAndBlanks(t,u.input.length));let l;-1===(l="{"===t.charAt(0)?t.indexOf("}"):"("===t.charAt(0)?t.indexOf(")"):"["===t.charAt(0)?t.indexOf("]"):u===quoteSymbol?t.slice(1).indexOf("'")+1:0)&&(l=t.length);let s="";return" "===(x=t.slice(1,l)).charAt(0)&&(s="\\ "),s+=`\\text{${x}}`," "===x.charAt(x.length-1)&&(s+="\\ "),[s,t=removeCharsAndBlanks(t,l+1)]}case tokens.UNARY:{t=removeCharsAndBlanks(t,u.input.length);let i=parseSexpr(t,e);if(null===i[0])return[`{${getTeXsymbol(u)}}`,t];if(!0===u.func){if("^"===(x=t.charAt(0))||"_"===x||"/"===x||"|"===x||","===x||1===u.input.length&&u.input.match(/\w/)&&"("!==x)return[`{${getTeXsymbol(u)}}`,t];{let T=`{${getTeXsymbol(u)}{${i[0]}}}`;return[T,i[1]]}}if(i[0]=removeBrackets(i[0]),"sqrt"===u.input)return[`\\sqrt{${i[0]}}`,i[1]];if("cancel"===u.input)return[`\\cancel{${i[0]}}`,i[1]];if(void 0!==u.rewriteLeftRight)return[`{\\left${u.rewriteLeftRight[0]}${i[0]}\\right${u.rewriteLeftRight[1]}}`,i[1],];else if(!0===u.acc)return[`${getTeXsymbol(u)}{${i[0]}}`,i[1]];else return[`{${getTeXsymbol(u)}{${i[0]}}}`,i[1]]}case tokens.BINARY:{t=removeCharsAndBlanks(t,u.input.length);let m=parseSexpr(t,e);if(null===m[0])return[`{${getTeXsymbol(u)}}`,t];m[0]=removeBrackets(m[0]);var r=parseSexpr(m[1],e);if(null===r[0])return[`{${getTeXsymbol(u)}}`,t];r[0]=removeBrackets(r[0]);let g="";return[g="color"===u.input?`{\\color{${m[0].replace(/[{}]/g,"")}}${r[0]}}`:"root"===u.input?`{\\sqrt[${m[0]}]{${r[0]}}}`:`{${getTeXsymbol(u)}{${m[0]}}{${r[0]}}}`,r[1]]}case tokens.INFIX:return t=removeCharsAndBlanks(t,u.input.length),[u.output,t];case tokens.SPACE:return t=removeCharsAndBlanks(t,u.input.length),[`{\\quad\\text{${u.input}}\\quad}`,t];case tokens.LEFTRIGHT:{e++,t=removeCharsAndBlanks(t,u.input.length);let y=parseExpr(t,!1,e);e--;var x="";if("|"!==(x=y[0].charAt(y[0].length-1)))return["{\\mid}",t];{let k=`{\\left|${y[0]}}`;return[k,y[1]]}}default:return t=removeCharsAndBlanks(t,u.input.length),[`{${getTeXsymbol(u)}}`,t]}}function parseIexpr(t,e){let u;t=removeCharsAndBlanks(t,0);let n=getSymbol(t),o=parseSexpr(t,e),p=o[0];t=o[1];let a=getSymbol(t);if(!(a.tType===tokens.INFIX&&"/"!==a.input))return[p,t];if(t=removeCharsAndBlanks(t,a.input.length),null===(o=parseSexpr(t,e))[0]?o[0]="{}":o[0]=removeBrackets(o[0]),t=o[1],"_"===a.input){if("^"===(u=getSymbol(t)).input){t=removeCharsAndBlanks(t,u.input.length);let l=parseSexpr(t,e);l[0]=removeBrackets(l[0]),t=l[1],p=`{${p}`,p+=`_{${o[0]}}`,p+=`^{${l[0]}}`,p+="}"}else p+=`_{${o[0]}}`}else p=`${p}^{${o[0]}}`;return void 0!==n.func&&n.func&&(u=getSymbol(t)).tType!==tokens.INFIX&&u.tType!==tokens.RIGHTBRACKET&&(p=`{${p}${(o=parseIexpr(t,e))[0]}}`,t=o[1]),[p,t]}function parseExpr(t,e,u){let n,o,p,a,l="",s=!1;do o=(p=parseIexpr(t=removeCharsAndBlanks(t,0),u))[0],(n=getSymbol(t=p[1])).tType===tokens.INFIX&&"/"===n.input?(null===(p=parseIexpr(t=removeCharsAndBlanks(t,n.input.length),u))[0]?p[0]="{}":p[0]=removeBrackets(p[0]),t=p[1],o=`\\frac{${o=removeBrackets(o)}}`,o+=`{${p[0]}}`,l+=o,n=getSymbol(t)):o&&(l+=o);while((n.tType!==tokens.RIGHTBRACKET&&(n.tType!==tokens.LEFTRIGHT||e)||0===u)&&n&&n.output);if(n.tType===tokens.RIGHTBRACKET||n.tType===tokens.LEFTRIGHT){let i=l.length;if(i>2&&"{"===l.charAt(0)&&l.indexOf(",")>0){let T=l.charAt(i-2);if(")"===T||"]"===T){let m=l.charAt(6);if("("===m&&")"===T&&"}"!==n.output||"["===m&&"]"===T){let r="\\matrix{",g=[];g.push(0);let y=!0,x=0,k=[];k[0]=[0];let $=0,N=0;for(a=1;a<i-1;a++)l.charAt(a)===m&&x++,l.charAt(a)===T&&0==--x&&","===l.charAt(a+2)&&"{"===l.charAt(a+3)&&(g.push(a+2),k[$=a+2]=[a+2]),("["===l.charAt(a)||"("===l.charAt(a)||"{"===l.charAt(a))&&N++,("]"===l.charAt(a)||")"===l.charAt(a)||"}"===l.charAt(a))&&N--,","===l.charAt(a)&&1===N&&k[$].push(a),N<0&&($===a+1?a++:y=!1);g.push(i);let c=-1;if(0===x&&g.length>0&&y)for(a=0;a<g.length-1;a++){a>0&&(r+="\\\\");let C;if(0===a){if(1===k[g[a]].length)C=[l.substr(g[a]+7,g[a+1]-g[a]-15),];else{let h=[l.substring(g[a]+7,k[g[a]][1]),];for(let A=2;A<k[g[a]].length;A++)h.push(l.substring(k[g[a]][A-1]+1,k[g[a]][A]));h.push(l.substring(k[g[a]][k[g[a]].length-1]+1,g[a+1]-8))}}else if(1===k[g[a]].length)C=[l.substr(g[a]+8,g[a+1]-g[a]-16),];else{C=[l.substring(g[a]+8,k[g[a]][1])];for(let S=2;S<k[g[a]].length;S++)C.push(l.substring(k[g[a]][S-1]+1,k[g[a]][S]));C.push(l.substring(k[g[a]][k[g[a]].length-1]+1,g[a+1]-8))}c>0&&C.length!==c?y=!1:-1===c&&(c=C.length),r+=C.join("&")}r+="}",y&&(l=r)}}}t=removeCharsAndBlanks(t,n.input.length),"boolean"==typeof n.invisible&&n.invisible?(l+="\\right.",s=!0):(l+=o=`\\right${getTeXsymbol(n)}`,s=!0)}return u>0&&!s&&(l+="\\right."),[l,t]}export default function e(t){return(t=t.replace(/(&nbsp;|\u00a0|&#160;)/g,"").replace(/&gt;/g,">").replace(/&lt;/g,"<")).match(/\S/)?parseExpr(t.replace(/^\s+/g,""),!1,0)[0]:""};